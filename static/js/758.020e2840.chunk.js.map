{"version":3,"file":"static/js/758.020e2840.chunk.js","mappings":"wNAiEA,UA9DqB,WAAO,IAAD,IACzB,GAAkCA,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAyB3D,OAxBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,+FAClBC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NANkB,kBAWCC,MAAM,sCAAD,OACYf,EADZ,mBAE1BU,GAboB,cAWhBM,EAXgB,gBAeHA,EAASC,OAfN,OAehBC,EAfgB,OAgBtBnB,EAAamB,GAhBS,kDAkBtBC,QAAQC,MAAR,MAlBsB,0DAAH,qDAqBvBX,GACD,GAAE,CAACT,KAEF,4BACE,SAAC,KAAD,CAAMqB,GAAIjB,EAAoBkB,QAA9B,sBACA,4BACE,gBAAKC,IAAG,yCAAoCzB,EAAU0B,eAAiBC,IAAI,YAC3E,wBAAK3B,EAAU4B,kBACf,wCAAuC,GAAvB5B,EAAU6B,cAAiBC,QAAQ,GAAnD,QACA,sCACA,uBAAI9B,EAAU+B,YACd,oCACA,wBACG/B,EAAUgC,QACThC,EAAUgC,OAAOC,KAAI,SAAAC,GAAC,OAAI,wBAAgBA,EAAEC,MAATD,EAAEE,GAAf,UAG5B,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMb,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAc,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,sBC/DD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO1B,GAEP,YADAoB,EAAOpB,EAET,CACIyB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["pages/movieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState, useEffect, useRef, Suspense } from 'react';\nimport { Link, useParams, Outlet, useLocation } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation()\n  const backLinkLocationRef = useRef(location.state?.from ?? '/')\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjODNhZWU2YjYwMWRjNTY1NmY0ODQ1ODgzZmYyMDVlMyIsInN1YiI6IjY0NmY4YzY5YzVhZGE1MDBhODJkODAyOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.GcK5msQXw_EpiSZxf4jlq1LUT05Y42famLe5sWKl8SY',\n        },\n      };\n\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n          options\n        );\n        const data = await response.json();\n        setMovieInfo(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      <div>\n        <img src={`https://image.tmdb.org/t/p/w500${movieInfo.backdrop_path}`} alt=\"poster\" />\n        <h1>{movieInfo.original_title}</h1>\n        <p>User Score:{(movieInfo.vote_average*10).toFixed(0)}%</p>\n        <h2>Overview</h2>\n        <p>{movieInfo.overview}</p>\n        <h3>Genres</h3>\n        <ul>\n          {movieInfo.genres &&\n            movieInfo.genres.map(e => <li key={e.id}>{e.name}</li>)}\n        </ul>\n      </div>\n      <div>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <Link to='cast'>Cast</Link>\n          </li>\n          <li>\n            <Link to='reviews'>Reviews</Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","movieInfo","setMovieInfo","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovieDetails","options","method","headers","accept","Authorization","fetch","response","json","data","console","error","to","current","src","backdrop_path","alt","original_title","vote_average","toFixed","overview","genres","map","e","name","id","Suspense","fallback","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}