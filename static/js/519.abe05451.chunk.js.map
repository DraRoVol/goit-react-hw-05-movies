{"version":3,"file":"static/js/519.abe05451.chunk.js","mappings":"qPACA,EAAuB,yBAAvB,EAAuD,yBAAvD,EAAwF,0BAAxF,EAA2H,2B,SCqF3H,EAlFmB,WAAO,IAAD,EACvB,GAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCL,EAAAA,EAAAA,WAAS,GAA/C,eAAOM,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAsCT,EAAAA,EAAAA,UAAQ,UAACI,EAAaM,IAAI,gBAAlB,QAA8B,IAA5E,eAAOC,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,gGACR,sNACVC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cAAc,UAAD,OALD,yNADQ,kBAWCC,MAAM,mDAAD,OACyBT,EADzB,8CAE1BI,GAboB,cAWhBM,EAXgB,gBAeHA,EAASC,OAfN,OAehBC,EAfgB,OAgBhBC,EAAYD,EAAKE,QAAQC,KAAI,SAACC,GAAD,MAAO,CAACA,EAAEC,GAAID,EAAEE,OAASF,EAAEG,KAA3B,IACnC5B,EAAUsB,GACVjB,GAAe,GAlBO,kDAoBtBwB,QAAQC,IAAR,MACAzB,GAAe,GArBO,0DAAH,qDAyBnBD,GACFQ,GAEH,GAAE,CAACV,EAAcO,EAAaL,KAE/BO,EAAAA,EAAAA,YAAU,WACR,IAAMoB,EAAa7B,EAAaM,IAAI,SAChCuB,IACFrB,EAAeqB,GACf1B,GAAe,GAElB,GAAE,CAACH,IAgBJ,OACE,4BACE,kBAAM8B,SAZW,SAACP,GACpBA,EAAEQ,iBAEkB,KAAhBxB,EACFN,EAAgB,CAAC,IAEjBA,EAAgB,CAAE+B,MAAOzB,IACzBJ,GAAe,GAElB,EAGiC8B,UAAWC,EAAzC,WACI,kBAAOD,UAAWC,EAAiBC,KAAK,OAAOC,MAAO7B,EAAa8B,SAjBjD,SAACd,GACzBf,EAAee,EAAEe,OAAOF,MACzB,KAgBO,mBAAQH,UAAWC,EAAkBC,KAAK,SAA1C,uBAEHjC,IAAe,sCACfL,EAAO0C,OAAS,IACf,eAAIN,UAAWC,EAAf,SACGrC,EAAOyB,KAAI,SAACC,GAAD,OACV,yBACE,SAAC,KAAD,CAAMiB,GAAE,iBAAYjB,EAAE,IAAMkB,MAAO,CAAEC,KAAMtC,GAA3C,SACGmB,EAAE,MAFEA,EAAE,GADD,QAWrB,C,sBCpFD,SAASoB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBd,EAAQe,EAAKf,KAInB,CAHE,MAAOgB,GAEP,YADAN,EAAOM,EAET,CACID,EAAKE,KACPR,EAAQT,GAERkB,QAAQT,QAAQT,GAAOmB,KAAKR,EAAOC,EAEvC,CACe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GACzB,SAASb,EAAMX,GACbO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQZ,EAClE,CACA,SAASY,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CACAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/pages/moviesPage/MoviesPage.module.css?765a","pages/moviesPage/MoviesPage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesPage_list__jOmZq\",\"item\":\"MoviesPage_item__Uvfyq\",\"input\":\"MoviesPage_input__15ZFg\",\"button\":\"MoviesPage_button__jKeu4\"};","import React, { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport cssModule from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isSearching, setIsSearching] = useState(false);\n  const location = useLocation();\n  const [searchQuery, setSearchQuery] = useState(searchParams.get('query') ?? '');\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      const API_KEY = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJjODNhZWU2YjYwMWRjNTY1NmY0ODQ1ODgzZmYyMDVlMyIsInN1YiI6IjY0NmY4YzY5YzVhZGE1MDBhODJkODAyOCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.GcK5msQXw_EpiSZxf4jlq1LUT05Y42famLe5sWKl8SY';\n      const options = {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n          Authorization: `Bearer ${API_KEY}`,\n        },\n      };\n\n      try {\n        const response = await fetch(\n          `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=1`,\n          options\n        );\n        const data = await response.json();\n        const movieInfo = data.results.map((e) => [e.id, e.title || e.name]);\n        setMovies(movieInfo);\n        setIsSearching(false);\n      } catch (error) {\n        console.log(error);\n        setIsSearching(false);\n      }\n    };\n\n    if (isSearching) {\n      fetchMovieDetails();\n    }\n  }, [searchParams, searchQuery, isSearching]);\n\n  useEffect(() => {\n    const queryParam = searchParams.get('query');\n    if (queryParam) {\n      setSearchQuery(queryParam);\n      setIsSearching(true);\n    }\n  }, [searchParams]);\n\n  const updateQueryString = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n\n    if (searchQuery === '') {\n      setSearchParams({});\n    } else {\n      setSearchParams({ query: searchQuery });\n      setIsSearching(true);\n    }\n  };\n  return (\n    <div>\n      <form onSubmit={handleSearch} className={cssModule.item}>\n          <input className={cssModule.input} type=\"text\" value={searchQuery} onChange={updateQueryString} />\n          <button className={cssModule.button} type=\"submit\">Search</button>\n      </form>\n      {isSearching && <p>Loading...</p>}\n      {movies.length > 0 && (\n        <ul className={cssModule.list}>\n          {movies.map((e) => (\n            <li key={e[0]}>\n              <Link to={`/movie/${e[0]}`} state={{ from: location }}>\n                {e[1]}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","isSearching","setIsSearching","location","useLocation","get","searchQuery","setSearchQuery","useEffect","fetchMovieDetails","options","method","headers","accept","Authorization","fetch","response","json","data","movieInfo","results","map","e","id","title","name","console","log","queryParam","onSubmit","preventDefault","query","className","cssModule","type","value","onChange","target","length","to","state","from","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}